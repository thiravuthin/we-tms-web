import {ColumnDef} from "@tanstack/react-table";
import CustomTooltip from "@/app/components/shared/CustomTooltip";
import {Spinner} from "react-bootstrap";
import React from "react";
import IndeterminateCheckbox from "@/app/components/shared/IndeterminateCheckbox";
import {User} from "@/app/lib/types/user";

const tickIcon = "M7.69238 15.5479C7.33691 15.5479 7.07031 15.4146 6.8291 15.1162L3.54102 11.0664C3.35693 10.8442 3.28076 10.6348 3.28076 10.4126C3.28076 9.90479 3.65527 9.53662 4.17578 9.53662C4.48682 9.53662 4.70264 9.65088 4.91211 9.91113L7.66699 13.4023L13.0435 4.88379C13.2593 4.54102 13.4751 4.41406 13.8306 4.41406C14.3447 4.41406 14.7129 4.77588 14.7129 5.27734C14.7129 5.47412 14.6558 5.67725 14.5034 5.90576L8.56201 15.0972C8.35889 15.4019 8.06689 15.5479 7.69238 15.5479Z";
const exclamationIcon = "M6.51172 12.3027C5.99756 12.3027 5.69287 11.9854 5.68018 11.4585L5.57861 4.90137C5.57861 4.85059 5.57861 4.7998 5.57861 4.76172C5.57861 4.19043 5.96582 3.84766 6.51172 3.84766C7.05762 3.84766 7.43848 4.19043 7.43848 4.76172C7.43848 4.7998 7.43848 4.85059 7.43848 4.90137L7.34326 11.4585C7.33057 11.9854 7.02588 12.3027 6.51172 12.3027ZM11.4883 12.3027C10.9741 12.3027 10.6694 11.9854 10.6567 11.4585L10.5615 4.90137C10.5552 4.85059 10.5552 4.7998 10.5552 4.76172C10.5552 4.19043 10.9424 3.84766 11.4883 3.84766C12.0342 3.84766 12.4214 4.19043 12.4214 4.76172C12.4214 4.7998 12.415 4.85059 12.415 4.90137L12.3262 11.4585C12.3071 11.9854 12.0024 12.3027 11.4883 12.3027ZM6.51172 15.959C5.87695 15.959 5.36279 15.4575 5.36279 14.8418C5.36279 14.2197 5.87695 13.731 6.51172 13.731C7.14014 13.731 7.6543 14.2197 7.6543 14.8418C7.6543 15.4575 7.14014 15.959 6.51172 15.959ZM11.4883 15.959C10.8535 15.959 10.3394 15.4575 10.3394 14.8418C10.3394 14.2197 10.8535 13.731 11.4883 13.731C12.1167 13.731 12.6309 14.2197 12.6309 14.8418C12.6309 15.4575 12.1167 15.959 11.4883 15.959Z";
const activeStyle = "ks-wt-active";
const errorStyle = "ks-wt-error";
export const DefaultColumns: ColumnDef<User>[] = [
    {
        meta: {headerClass: "ks_table_no_padding ks_wth_1 "},
        accessorKey: "checkbox",
        id: "checkbox",
        enableSorting: false,
        header: ({table}) => (
            <IndeterminateCheckbox
                {...{
                    checked: table.getIsAllRowsSelected(),
                    indeterminate: table.getIsSomeRowsSelected(),
                    onChange: table.getToggleAllRowsSelectedHandler(),
                }}
            />
        ),
        cell: ({row}) => (
            <IndeterminateCheckbox
                {...{
                    checked: row.getIsSelected(),
                    disabled: !row.getCanSelect(),
                    indeterminate: row.getIsSomeSelected(),
                    onChange: row.getToggleSelectedHandler(),
                }}
            />
        ),
    },
    {
        meta: {headerClass: "ks_table_header_custom"},
        accessorKey: "profile",
        id: "profile",
        header: "Profile",
        cell: ({row}) => {
            const addressTextProfile = row?.original?.full_nm;
            const addressTextRole = row?.original?.role;
            return (
                <>
                    <div className="ks_d_flex ks_alg_itm_ctr ks_d_inl_flex ks_pl_0 pt-1">
                        <svg className="ks_pl0" width="36" height="36" viewBox="0 0 36 36" fill="none"
                             xmlns="http://www.w3.org/2000/svg">
                            <rect width="36" height="36" rx="18" fill="#DFE6EF"/>
                            <path
                                d="M16.1283 16.1445C16.0852 15.7414 15.9036 15.4274 15.5835 15.2028C15.2665 14.9781 14.8541 14.8658 14.3463 14.8658C13.9893 14.8658 13.6831 14.9196 13.4276 15.0273C13.1722 15.1351 12.9768 15.2812 12.8414 15.4659C12.7059 15.6506 12.6367 15.8614 12.6336 16.0984C12.6336 16.2953 12.6782 16.4661 12.7675 16.6108C12.8598 16.7554 12.9845 16.8786 13.1414 16.9801C13.2984 17.0786 13.4723 17.1617 13.6631 17.2294C13.8539 17.2971 14.0463 17.354 14.2401 17.4002L15.1265 17.6218C15.4835 17.7049 15.8267 17.8172 16.156 17.9588C16.4884 18.1004 16.7854 18.2789 17.047 18.4943C17.3116 18.7098 17.5209 18.9698 17.6748 19.2745C17.8287 19.5792 17.9056 19.9362 17.9056 20.3455C17.9056 20.8995 17.7641 21.3873 17.4809 21.8089C17.1978 22.2275 16.7884 22.5553 16.2529 22.7923C15.7205 23.0262 15.0757 23.1431 14.3186 23.1431C13.5831 23.1431 12.9445 23.0292 12.4028 22.8015C11.8642 22.5737 11.4426 22.2414 11.1379 21.8043C10.8363 21.3673 10.6731 20.8349 10.6485 20.207H12.3335C12.3582 20.5363 12.4597 20.8103 12.6382 21.0288C12.8167 21.2473 13.0491 21.4104 13.3353 21.5181C13.6246 21.6258 13.9478 21.6797 14.3048 21.6797C14.6772 21.6797 15.0034 21.6243 15.2835 21.5135C15.5666 21.3996 15.7882 21.2427 15.9482 21.0426C16.1083 20.8395 16.1898 20.6025 16.1929 20.3317C16.1898 20.0855 16.1175 19.8823 15.9759 19.7223C15.8344 19.5592 15.6359 19.4238 15.3804 19.3161C15.128 19.2053 14.8326 19.1068 14.4941 19.0206L13.4184 18.7436C12.6398 18.5436 12.0242 18.2404 11.5718 17.8342C11.1225 17.4248 10.8978 16.8816 10.8978 16.2045C10.8978 15.6475 11.0486 15.1597 11.3502 14.7411C11.6549 14.3226 12.0689 13.9979 12.5921 13.767C13.1153 13.5331 13.7077 13.4162 14.3694 13.4162C15.0403 13.4162 15.6282 13.5331 16.1329 13.767C16.6407 13.9979 17.0393 14.3195 17.3286 14.7319C17.6179 15.1412 17.7671 15.6121 17.7764 16.1445H16.1283ZM24.5707 16.1445C24.5276 15.7414 24.346 15.4274 24.0259 15.2028C23.7089 14.9781 23.2965 14.8658 22.7887 14.8658C22.4317 14.8658 22.1255 14.9196 21.87 15.0273C21.6146 15.1351 21.4192 15.2812 21.2837 15.4659C21.1483 15.6506 21.0791 15.8614 21.076 16.0984C21.076 16.2953 21.1206 16.4661 21.2099 16.6108C21.3022 16.7554 21.4268 16.8786 21.5838 16.9801C21.7408 17.0786 21.9147 17.1617 22.1055 17.2294C22.2963 17.2971 22.4886 17.354 22.6825 17.4002L23.5689 17.6218C23.9259 17.7049 24.2691 17.8172 24.5984 17.9588C24.9308 18.1004 25.2277 18.2789 25.4893 18.4943C25.754 18.7098 25.9633 18.9698 26.1172 19.2745C26.2711 19.5792 26.348 19.9362 26.348 20.3455C26.348 20.8995 26.2064 21.3873 25.9233 21.8089C25.6402 22.2275 25.2308 22.5553 24.6953 22.7923C24.1629 23.0262 23.5181 23.1431 22.761 23.1431C22.0254 23.1431 21.3868 23.0292 20.8452 22.8015C20.3066 22.5737 19.8849 22.2414 19.5803 21.8043C19.2786 21.3673 19.1155 20.8349 19.0909 20.207H20.7759C20.8005 20.5363 20.9021 20.8103 21.0806 21.0288C21.2591 21.2473 21.4915 21.4104 21.7777 21.5181C22.067 21.6258 22.3902 21.6797 22.7472 21.6797C23.1196 21.6797 23.4458 21.6243 23.7259 21.5135C24.0089 21.3996 24.2305 21.2427 24.3905 21.0426C24.5506 20.8395 24.6321 20.6025 24.6352 20.3317C24.6321 20.0855 24.5598 19.8823 24.4183 19.7223C24.2767 19.5592 24.0782 19.4238 23.8227 19.3161C23.5703 19.2053 23.275 19.1068 22.9364 19.0206L21.8608 18.7436C21.0821 18.5436 20.4665 18.2404 20.0142 17.8342C19.5648 17.4248 19.34 16.8816 19.34 16.2045C19.34 15.6475 19.4908 15.1597 19.7924 14.7411C20.0971 14.3226 20.5111 13.9979 21.0343 13.767C21.5575 13.5331 22.15 13.4162 22.8116 13.4162C23.4825 13.4162 24.0704 13.5331 24.5751 13.767C25.0829 13.9979 25.4815 14.3195 25.7708 14.7319C26.0601 15.1412 26.2093 15.6121 26.2186 16.1445H24.5707ZM21.0448 23.3838V23.8502H23.1398V25.1292H21.0448V25.5956H23.6168V26.994H19.9058V22.9174H23.6168V24.3143H21.0448Z"
                                fill="#3C78C0"/>
                        </svg>
                        <div className="ks_d_flex ks_flex_col px-2">
                            <label className="ks_pl10">{addressTextProfile}</label>
                            <label className="ks_pl10">{addressTextRole}</label>
                        </div>
                    </div>
                </>
            )
        }

    },
    {
        meta: {headerClass: "ks-min-width-220 ks-max-width-200"},
        accessorKey: "role",
        id: "role",
        header: "Role",
        cell: ({row}) => {
            const addressText = row?.original?.role;

            return (
                <>
                    <div className="ks-text-ellipsis">
                        {addressText}
                    </div>
                </>
            );
        },
    },
    {
        meta: {headerClass: "ks-min-width-220 ks-max-width-200"},
        accessorKey: "register_date",
        id: "registerDate",
        header: "Register Date",
        cell: ({row}) => {
            const addressText = row?.original?.register_date;
            return (
                <>
                    <div className="ks-text-ellipsis">
                        {addressText}
                    </div>
                </>
            );
        },
    },
]